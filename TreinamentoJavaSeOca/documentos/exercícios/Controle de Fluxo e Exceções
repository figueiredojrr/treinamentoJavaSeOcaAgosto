1. Dado:

	public class Flipper {
		public static void main(String[] args) {
			String o = "-";
			switch ("FRED".toLowerCase().substring(1,3)) {
				case "yellow":
					o += "y";
				case "red":
					o += "r";
				case "green":
					o += "g";
			}
		}
	}
	
	Qual é o resultado?
	
	A. -
	B. -r
	C. -rg
	D. compilação falha
	E. Uma exceção em tempo de execução é lançada
	
Resposta:

2. Dado:
	
	class plane {
		static String s = "-";
		public static void main(String[] args) {
			new Plane().s1();
			System.out.println(s);
		}
		vois s1() {
			try { s2(); } 
			catch (Exception e) { s+= "c"; }
		}
		void s2() throws Exception {
			s3(); s+= "2";
			s3(); s += "2b";
		}
		void s3() throws Exception {
			throw new Exception();
		}
	}
	
	Qual é o resultado?
	
	A. -
	B. -c
	C. -c2
	D. -2c
	E. -c22b
	F. -2c2b
	G. -2c2bc
	H. Compilação falha

Resposta:

3. Dado:
	
	try { int x = Integer.parseInt("two"); }
	
	Qual opção abaixo poderia ser usada pra criar um bloco catch apropriado? (Escolha todas que se aplicam)
	
	A. ClassCastException
	B. IllegalStateException
	C. NumberFormatException
	D. IllegalArgumentException
	E. ExceptionInInitializerError
	F. ArrayIndexOutOfBoundsException
	
Resposta:

4. Dado: 

	public class Flip2 {
		public static void main(String[] args) {
			String o = "-";
			String[] sa = new String[4];
			for(int i = 0; i < args.lenght ; i++)
				sa[i] = args[i];
			for (String n : sa) {
				switch (n.toLowerCase()) {
					case "yellow" : o += "y";
					case "red": o += "r";
					case "green": o += "g";
				}
			}
			System.out.print(o);
		}
	}
	
	E dado a invocação da linha de comando
		Java Flip2 RED Green YeLLow
		
	Quais são verdade? (Escolha toda que se aplicam)
	
	A. A string rgy irá aparecer em algum lugar na saída
	B. A string rgg irá aparecer em algum lugar na saída
	C. A string gyr irá aparecer em algum lugar na saída
	D. Compilação falha
	E. Uma exceção em tempo de execução é lançada
	
Resposta:

5. Dado:

	 class Loopy {
	 	public static void main(String[] args) {
	 		int[] x = {7,6,5,4,3,2,1};
	 		// insert code here
	 		System.out.print(y + " ");
	 	}
	 }
	 
	 Quais, inseridas independentemente à linha 4, compilará? (Escolha todas que se aplicam)
	 
	 A. for(int y : x) {
	 B. for(x: int y) }
	 C. int y = 0; for(y : x) {
	 D. for(int y = 0, z = 0; z < x.lenght; z++) { y = x[z];
	 E. for(int y = 0, int z  = 0; z < x.lenght; z++) { y = x[z]; 
	 F. int y = 0; for(int z = 0; z < x.lenght; z++) { y = x[z];
	 
Resposta:

6. Dado:

	class emu {
		static String s = "-";
		public static void main(String[] args) {
			try {
				throw new Exception();
			} catch(Exception e) {
				try {
					try { throw new Exception();
					} catch (Exception ex) { s += "ic "; }
					throw new Exception(); }
				catch (Exception x) { s += "mc "; }
			} finally { s += "of "; }
			System.out.println(s);
	} }
	
	Qual é o resultado?
	
	A. -ic of
	B. -mf of
	C. -mc mf
	D. -ic mf of
	E. -ic mc mf of
	F. -ic mc of mf
	G. Compilação falha
	
Resposta:

7. Dado:

	3.	class SubException extends Exception { }
	4.	class SubsubException extends SubException { }
	5.	
	6.	public class CC { void doStuff() throws subException { } }
	7.	
	8.	class CC2 extends CC { void doStuff() throws SubSubException { } }
	9.	
	10.	class CC3 extends CC { void doStuff() throws Exception { } }
	11.	
	12.	class CC4 extends CC { void doStuff(int x) throws Exception { } }
	13.	
	14.	class CC5 extends CC { void doStuff() { } }
	
	Qual é o resultado? (Escolha todas que se aplicam)
		
	A. Compila com sucesso
	B. Compilação falha devido um erro na linha 8	
	C. Compilação falha devido um erro na linha 10
	D. Compilação falha devido um erro na linha 12
	E. Compilação falha devido um erro na linha 14
	
Resposta:
	
8. Dado:

	3.	class Infinity { }
	4.	public class Beyond extends Infinity {
	5.		static Integer i;
	6.		public static void main(String[] args) {
	7.			int sw = (int) (Math.random() * 3);
	8.			switch(sw) {
	9.				case 0: { for(int x = 10; x > 5; x++)
	10							if(x > 10000000) x = 10;
	11.						  break; }
	12.				case 1: { int y = 7 * i; break; }
	13.				case 2: { Infinity inf = new Beyond();
	14.						  Beyond b = (Beyond) inf; }
	15.			}
	16.		}
	17.	}
	
	E, dado que a linha 7 irá assinalar os valores 0, 1 e 2 para sw, quais são verdade?
	(Escolha todas que se aplicam)
	
	A. Compilação falha
	B. ClassCastException pode ser lançada
	C. StackOverflowError pode ser lançada
	D. NullPointerException pode ser lançada
	E. IllegalStateException pode ser lançada
	F. O programa pode travar sem sequer completar
	G. O programa irá sempre completar sem exceções
	
Resposta:	

9. Dado:
	
	public class Circles {
		public static void main(String[] args) {
			int[] ia = {1,3,5,7,9};
			for(int x : ia) {
				for(int j = 0; j < 3; j++) {
					if(x > 4 && x < 8) continue;
					System.out.print(" " + x);
					if(j == 1) break;
					continue;
				}
				continue;
			}
		}
	}
	
	Qual é o resultado?
	
	A.  1 3 9
	B.  5 5 7 7
	C. 1 3 3 9 9
	D. 1 1 3 3 9 9
	E. 1 1 1 3 3 3 9 9 9
	F. Compilação falha
	
Resposta:						
			
10. Dado:		
	
	3.	public class OverAndOver {
	4.		static String s = "";
	5.		public static void main(String[] args) {
	6.			try {
	7.				s += "1";
	8.				throw new Exception();
	9.			} catch(Exception e) { s+= "2";
	10.			} finally { s += "3"; doStuff(); s += "4";
	11.			}			
	12.			System.out.println(s);
	13.		}
	14.		static void doStuff() { int = 0; int y = 7/x; }
	15.	}
	
	Qual é o resultado?
	
	A. 12
	B. 13
	C. 123
	D. 1234
	E. Compilação falha
	F. 123 seguido de uma exceção
	G. 1234 seguido de uma exceção
	H. Uma exceção é lançada sem nenhuma saída
	
Resposta:

11. Dado:

	public class Wind {
		public static void main(String[] args) {
			foreach:
			for(int j=0 ; j<5; j++) {
				for(int k=0;k<3; k++) {
					System.out.print(" " + j);
					if(j==3 && k==1) break foreach;
					if(j==0 || j==2) break;
				}
			}
		}
	}
	
	Qual é o resultado?
	
	A. 0 1 2 3
	B. 1 1 1 3 3
	C. 0 1 1 1 2 3 3
	D. 1 1 1 3 3 4 4 4
	E. 0 1 1 1 2 3 3 4 4 4
	F. Compilação falha
	
Resposta:

	
	
	